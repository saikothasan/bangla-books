import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

// Importing fonts from Google
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// SEO metadata settings
export const metadata: Metadata = {
  title: "Create Next App",
  description: "A Next.js app generated by Create Next App",
  keywords: ["Next.js", "App", "PDF Books", "Search Engine", "Programmable Search Engine"],
  authors: ["Your Name"],
  creator: "Your Name",
  robots: "index, follow",  // Directing search engines to index and follow links
  openGraph: {
    title: "Create Next App",
    description: "Generated by create next app",
    url: "https://www.yourwebsite.com",  // Replace with your site's URL
    siteName: "Create Next App",
    images: [
      {
        url: "https://www.yourwebsite.com/images/og-image.png", // Replace with an image URL
        width: 1200,
        height: 630,
        alt: "Create Next App OG Image",
      },
    ],
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    site: "@yourtwitterhandle",  // Replace with your Twitter handle
    title: "Create Next App",
    description: "Generated by create next app",
    image: "https://www.yourwebsite.com/images/og-image.png", // Replace with an image URL
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
        <title>{metadata.title}</title>
        <meta name="description" content={metadata.description} />
        <meta name="keywords" content={metadata.keywords?.join(", ")} />
        <meta name="robots" content={metadata.robots} />
        <link rel="icon" href="/favicon.ico" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
